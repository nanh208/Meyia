const { SlashCommandBuilder, EmbedBuilder, ActionRowBuilder, ButtonBuilder, ButtonStyle } = require("discord.js");
const ms = require("ms");

function parseTime(str) {
  try { return ms(str); } catch { return null; }
}

module.exports = {
  data: new SlashCommandBuilder()
    .setName("giveaway")
    .setDescription("üéÅ T·∫°o m·ªôt s·ª± ki·ªán giveaway m·ªõi")
    .addStringOption(o => o.setName("ph·∫ßn_th∆∞·ªüng").setDescription("Ph·∫ßn th∆∞·ªüng l√† g√¨?").setRequired(true))
    .addIntegerOption(o => o.setName("s·ªë_l∆∞·ª£ng_gi·∫£i").setDescription("S·ªë ng∆∞·ªùi th·∫Øng").setRequired(true))
    .addStringOption(o => o.setName("th·ªùi_gian").setDescription("Th·ªùi gian (vd: 10m, 1h, 1d)").setRequired(true)),

  async execute(interaction, client) {
    try {
      const prize = interaction.options.getString("ph·∫ßn_th∆∞·ªüng");
      const numWinners = interaction.options.getInteger("s·ªë_l∆∞·ª£ng_gi·∫£i");
      const time = parseTime(interaction.options.getString("th·ªùi_gian"));
      if (!time) return interaction.reply({ content: "‚ùå Th·ªùi gian kh√¥ng h·ª£p l·ªá!", ephemeral: true });

      const endTime = Date.now() + time;

      const embed = new EmbedBuilder()
        .setColor(client.MAIN_COLOR)
        .setTitle("<a:1255341894687260775:1433317867293642858> **GIVEAWAY** <a:1255340646248616061:1433317989406605383>")
        .setDescription(
          `üéÅ **Ph·∫ßn th∆∞·ªüng:** ${prize}\n` +
          `<a:1255340646248616061:1433317989406605383> **S·ªë l∆∞·ª£ng gi·∫£i:** ${numWinners}\n` +
          `‚åõ **Th·ªùi gian:** ${interaction.options.getString("th·ªùi_gian")}\n` +
          `üëë **Ng∆∞·ªùi t·ªï ch·ª©c:** <@${interaction.user.id}>`
        )
        .setThumbnail(interaction.user.displayAvatarURL({ dynamic: true }))
        .setFooter({ text: "Nh·∫•n üéâ ƒë·ªÉ tham gia!", iconURL: interaction.client.user.displayAvatarURL() });

      const row = new ActionRowBuilder().addComponents(
        new ButtonBuilder()
          .setCustomId("join_giveaway")
          .setLabel("üéâ Tham Gia")
          .setStyle(ButtonStyle.Success)
      );

      const msg = await interaction.reply({ embeds: [embed], components: [row], fetchReply: true });

      client.db.prepare(`INSERT INTO giveaways (id, channel_id, message_id, prize, winners, end_time, host_id)
        VALUES (?, ?, ?, ?, ?, ?, ?)`)
        .run(msg.id, interaction.channel.id, msg.id, prize, numWinners, endTime, interaction.user.id);

      client.scheduleGiveaway(client, msg, endTime, numWinners, prize, interaction);
    } catch (err) {
      console.error("Giveaway error:", err);
      return interaction.reply({ content: "‚ùå C√≥ l·ªói x·∫£y ra khi t·∫°o giveaway.", ephemeral: true });
    }
  },
};
